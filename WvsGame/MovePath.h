#pragma once
#include <list>
class InPacket;
class OutPacket;

struct MovePath
{
	enum MovePathAttribute
	{
		MPA_NORMAL = 0x0,
		MPA_JUMP = 0x1,
		MPA_IMPACT = 0x2,
		MPA_IMMEDIATE = 0x3,
		MPA_TELEPORT = 0x4,
		MPA_RANDOM_TELEPORT = 0x5,
		MPA_DEMON_TRACE_TELEPORT = 0x6,
		MPA_RETURN_TELEPORT = 0x7,
		MPA_HANGONBACK = 0x8,
		MPA_ASSAULTER = 0x9,
		MPA_ASSASSINATION = 0xA,
		MPA_RUSH = 0xB,
		MPA_STATCHANGE = 0xC,
		MPA_SITDOWN = 0xD,
		MPA_STARTFALLDOWN = 0xE,
		MPA_FALLDOWN = 0xF,
		MPA_STARTDRAGDOWN = 0x10,
		MPA_DRAGDOWN = 0x11,
		MPA_STARTWINGS = 0x12,
		MPA_WINGS = 0x13,
		MPA_ARAN_ADJUST = 0x14,
		MPA_MOB_TOSS = 0x15,
		MPA_MOB_TOSS_SLOWDOWN = 0x16,
		MPA_FLYING_BLOCK = 0x17,
		MPA_DASH_SLIDE = 0x18,
		MPA_BMAGE_ADJUST = 0x19,
		MPA_BLINK_LIGHT = 0x1A,
		MPA_TELEPORT_ZERO1 = 0x1B,
		MPA_FLASHJUMP = 0x1C,
		MPA_DOUBLE_JUMP = 0x1D,
		MPA_DOUBLE_JUMP_DOWN = 0x1E,
		MPA_TRIPLE_JUMP = 0x1F,
		MPA_FLASHJUMP_CHANGEEFF = 0x20,
		MPA_ROCKET_BOOSTER = 0x21,
		MPA_BACKSTEP_SHOT = 0x22,
		MPA_CANNON_JUMP = 0x23,
		MPA_QUICK_SILVER_JUMP = 0x24,
		MPA_MOBPOWERKNOCKBACK = 0x25,
		MPA_VERTICALJUMP = 0x26,
		MPA_CUSTOMIMPACT = 0x27,
		MPA_CUSTOMIMPACT2 = 0x28,
		MPA_COMBATSTEP = 0x29,
		MPA_HIT = 0x2A,
		MPA_TIMEBOMBATTACK = 0x2B,
		MPA_SNOWBALLTOUCH = 0x2C,
		MPA_BUFFZONEEFFECT = 0x2D,
		MPA_LEAF_TORNADO = 0x2E,
		MPA_STYLISH_ROPE = 0x2F,
		MPA_ROPE_CONNECT = 0x30,
		MPA_STRIKER_UPPERCUT = 0x31,
		MPA_CRAWL = 0x32,
		MPA_TELEPORT_BY_MOBSKILLAREA = 0x33,
		MPA_ZERO_TAG = 0x34,
		MPA_RETREAT_SHOT = 0x35,
		MPA_DB_BLADE_ASCENSION = 0x36,
		MPA_IMPACT_IGNORE_MOVEPATH = 0x37,
		MPA_ANGLE_IMPACT = 0x38,
		MPA_STARPLANET_RIDING_BOOSTER = 0x39,
		MPA_USER_TOSS = 0x3A,
		MPA_SLASH_JUMP = 0x3B,
		MPA_MOB_LADDER = 0x3C,
		MPA_MOB_RIGHTANGLE = 0x3D,
		MPA_MOB_STOPNODE_START = 0x3E,
		MPA_MOB_BEFORE_NODE = 0x3F,
		MPA_MOB_TELEPORT = 0x40,
		MPA_MOB_ATTACK_RUSH = 0x41,
		MPA_MOB_ATTACK_RUSH_STOP = 0x42,
		MPA_MOB_ATTACK_LEAP = 0x43,
		MPA_BATTLEPVP_MUGONG_SOMER_SAULT = 0x44,
		MPA_BATTLEPVP_HELENA_STEPSHOT = 0x45,
		MPA_SUN_OF_GLORY = 0x46,
		MPA_HOOKSHOT_START = 0x47,
		MPA_HOOKSHOT = 0x48,
		MPA_HOOKSHOT_END = 0x49,
		MPA_PINKBEAN_POGO_STICK = 0x4A,
		MPA_PINKBEAN_POGO_STICK_END = 0x4B,
		MPA_PINKBEAN_ROLLING_AIR = 0x4C,
		MPA_FINAL_TOSS = 0x4D,
		MPA_TELEPORT_KINESIS1 = 0x4E,
		MPA_NIGHTLORD_SHADOWWEB = 0x4F,
		MPA_TELEPORT_ARAN1 = 0x50,
		MPA_RW_EXPLOSION_CANNON = 0x51,
	};

	struct ELEM
	{
		short x, y, vx, vy, offsetX, offsetY, fh, fhFootStart;
		char bMoveAction, bForcedStop, bStat;
		int tElapse, nAttr;
	};
	short m_x, m_y, m_vx, m_vy;
	int m_fhLast, m_tEncodedGatherDuration;

	std::list<ELEM> m_lElem;

	MovePath();
	~MovePath();

	void Decode(InPacket* iPacket);
	void Encode(OutPacket* oPacket);
	
};

